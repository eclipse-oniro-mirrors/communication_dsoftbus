# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

hispark_pegasus_sdk_path = "//device/soc/hisilicon/hi3861v100/sdk_liteos"
dsoftbus_root_path = rebase_path(".")
dsoftbus_sdk_path = "${dsoftbus_root_path}/sdk"
dsoftbus_core_path = "${dsoftbus_root_path}/core"
dsoftbus_test_path = "${dsoftbus_root_path}/tests"
dsoftbus_fuzz_out_path = "dsoftbus/soft_bus"

declare_args() {
  softbus_adapter_common = "${dsoftbus_root_path}/adapter/common"
  softbus_adapter_config = "${dsoftbus_root_path}/adapter/default_config"
  dsoftbus_feature_product_config_path =
      "${dsoftbus_root_path}/adapter/default_config"
}

declare_args() {
  dsoftbus_get_devicename = true
  softbus_communication_wifi_feature = true
  softbus_os_account = true
}

if (defined(global_parts_info) &&
    !defined(global_parts_info.communication_wifi)) {
  softbus_communication_wifi_feature = false
}

if (defined(global_parts_info) &&
    !defined(global_parts_info.ability_ability_runtime)) {
  dsoftbus_get_devicename = false
}

if (defined(global_parts_info) &&
    !defined(global_parts_info.account_os_account)) {
  softbus_os_account = false
}

if (defined(global_parts_info) &&
    !defined(global_parts_info.communication_bluetooth)) {
  support_bluetooth = false
} else {
  support_bluetooth = true
}

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
  if (ohos_kernel_type == "liteos_m") {
    defines = [ "SOFTBUS_LITEOS_M" ]
    import("$softbus_adapter_config/feature_config/mini/config.gni")
  } else {
    defines = [ "SOFTBUS_LITEOS_A" ]
    import("$softbus_adapter_config/feature_config/small/config.gni")
  }
} else {
  if (defined(os_win)) {
    os_type = "windows"
  } else {
    os_type = "standard"
  }
  defines = [ "SOFTBUS_LINUX" ]
  import("//build/ohos.gni")
  import(
      "$dsoftbus_feature_product_config_path/feature_config/standard/config.gni")
}
