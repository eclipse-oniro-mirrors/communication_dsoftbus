# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../dsoftbus.gni")

module_output_path = "dsoftbus/connection/wifi_direct_cpp"
wifi_direct_cpp_path = "$dsoftbus_root_path/core/connection/wifi_direct_cpp"
dsoftbus_dfx_path = "$dsoftbus_root_path/core/common/dfx"
ohos_unittest("WifiDirectUtilsTest") {
  module_out_path = module_output_path

  include_dirs = [
    "//third_party/cJSON",
    "//third_party/googletest/googletest/include",
    "//third_party/googletest/googletest/src",
    "$dsoftbus_root_path/interfaces/kits/common",
    "$dsoftbus_root_path/interfaces/kits/discovery",
    "$dsoftbus_root_path/interfaces/kits/bus_center",
    "$dsoftbus_root_path/interfaces/inner_kits/lnn",
    "$wifi_direct_cpp_path/utils",
    "$wifi_direct_cpp_path/adapter",
    "$wifi_direct_cpp_path/channel",
    "$wifi_direct_cpp_path",
    "$dsoftbus_root_path/adapter/common/include",
    "$dsoftbus_root_path/core/bus_center/interface",
    "$dsoftbus_root_path/core/bus_center/lnn/net_builder/include",
    "$dsoftbus_root_path/core/bus_center/lnn/net_ledger/common/include",
    "$dsoftbus_root_path/core/bus_center/lnn/net_ledger/distributed_ledger/include",
    "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/lane_manager/include",
    "$dsoftbus_root_path/core/common/dfx/interface/include/form",
    "$dsoftbus_root_path/core/discovery/manager/include",
    "$dsoftbus_root_path/core/discovery/interface",
    "$dsoftbus_root_path/core/transmission/trans_channel/proxy/include",
    "$dsoftbus_root_path/core/common/dfx/interface/include",
    "$dsoftbus_root_path/core/common/include",
    "$dsoftbus_root_path/core/authentication/interface",
    "$dsoftbus_root_path/core/connection/interface",
    "$dsoftbus_root_path/tests/core/connection/wifi_direct_cpp",
  ]
  sources = [
    "$dsoftbus_root_path/core/connection/wifi_direct_cpp/utils/duration_statistic.cpp",
    "$dsoftbus_root_path/core/connection/wifi_direct_cpp/utils/wifi_direct_anonymous.cpp",
    "$dsoftbus_root_path/core/connection/wifi_direct_cpp/utils/wifi_direct_utils.cpp",
    "$dsoftbus_root_path/tests/core/connection/wifi_direct_cpp/wifi_direct_mock.cpp",
    "wifi_direct_utils_test.cpp",
  ]
  remove_configs = [
    "//build/config/compiler:no_rtti",
    "//build/config/compiler:no_exceptions",
  ]
  configs = [
    "//build/config/compiler:rtti",
    "//build/config/compiler:exceptions",
  ]

  cflags = [
    "-fexceptions",
    "-frtti",
  ]

  deps = [
    "$dsoftbus_dfx_path/anonymize:softbus_dfx_anonymizer",
    "$dsoftbus_root_path/adapter:softbus_adapter",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gmock_rtti",
    "//third_party/googletest:gtest_main",
    "//third_party/googletest:gtest_rtti",
  ]
  external_deps = [
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
    "wifi:wifi_sdk",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":WifiDirectUtilsTest" ]
}
